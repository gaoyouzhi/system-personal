server.port = 8081

#spring:
#  activemq:
#    user: user
#    password: password
#    broker-url: failover:(tcp://172.172.172.226:61616,tcp://172.172.172.227:61616,tcp://172.172.172.228:61616)
#    in-memory: true
#    send-timeout: 10000ms
#    close-timeout: 60s
#    pool:
#      enabled: false


#  redis:
#    database: 0
#    host: 127.0.0.1
#    jedis:
#      pool:
#        max-active: 8
#        max-idle: 8
#        max-wait: -1ms
#        min-idle: 0
#    lettuce:
#      pool:
#        max-active: 8
#        max-idle: 8
#        max-wait: -1ms
#        min-idle: 0
#      shutdown-timeout: 100ms
#    password: ''
#    port: 6379

logging.config = classpath:logback-boot.xml

#   quartz:
#    #相关属性配置
#    properties:
#      org:
#        quartz:
#          scheduler:
#            instanceName: clusteredScheduler
#            instanceId: AUTO
#          jobStore:
#            class: org.quartz.impl.jdbcjobstore.JobStoreTX
#            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#            tablePrefix: QRTZ_
#            isClustered: true
#            clusterCheckinInterval: 10000
#            useProperties: false
#          threadPool:
#            class: org.quartz.simpl.SimpleThreadPool
#            threadCount: 10
#            threadPriority: 5
#            threadsInheritContextClassLoaderOfInitializingThread: true
#    #数据库方式
#    job-store-type: jdbc
spring.datasource.url = jdbc:mysql://localhost:3306/fr_db?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=GMT%2B8
spring.datasource.username = root
spring.datasource.password = root
spring.datasource.driver-class-name = com.mysql.jdbc.Driver
spring.datasource.type = com.alibaba.druid.pool.DruidDataSource

##rabbitmq配置
#spring.rabbitmq.addresses=127.0.0.1:5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest
#spring.rabbitmq.virtual-host=/
#spring.rabbitmq.connection-timeout=15000
#spring.rabbitmq.listener.simple.concurrency=5
#spring.rabbitmq.listener.simple.max-concurrency=10
#
##confirm模式
#spring.rabbitmq.publisher-confirms=true
##与return机制结合配置次属性
#spring.rabbitmq.template.mandatory=true
## 开启发送失败退回
#spring.rabbitmq.publisher-returns=true
## 开启ACK
#spring.rabbitmq.listener.direct.acknowledge-mode=manual
#spring.rabbitmq.listener.simple.acknowledge-mode=manual


##http连接池配置
#
##连接池的最大连接数，0代表不限；如果取0，需要考虑连接泄露导致系统崩溃的后果
#spring.http-client.pool.maxTotalConnect= 1000
##每个路由的最大连接数,如果只调用一个地址,可以将其设置为最大连接数
#spring.http-client.pool.maxConnectPerRoute= 1000
## 指客户端和服务器建立连接的超时时间,ms , 最大约21秒,因为内部tcp在进行三次握手建立连接时,默认tcp超时时间是20秒
#spring.http-client.pool.connectTimeout= 3000
## 指客户端从服务器读取数据包的间隔超时时间,不是总读取时间,也就是socket timeout,ms
#spring.http-client.pool.readTimeout= 5000
## 从连接池获取连接的timeout,不宜过大,ms
#spring.http-client.pool.connectionRequestTimout= 200
## 重试次数
#spring.http-client.pool.retryTimes= 3
#spring.http-client.pool.charset= UTF-8
## 长连接保持时间 单位s,不宜过长
#spring.http-client.pool.keepAliveTime= 10
## 针对不同的网址,长连接保持的存活时间,单位s,如果是频繁而持续的请求,可以设置小一点,不建议设置过大,避免大量无用连接占用内存资源
#spring.http-client.pool.keepAliveTargetHost= {"www.baidu.com":5}